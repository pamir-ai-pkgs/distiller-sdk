#!/usr/bin/make -f

%:
	dh $@ --with python3

override_dh_auto_build:
	# Build step is handled by build-deb.sh which runs build.sh to:
	# 1. Download AI models from HuggingFace
	# 2. Build the Rust e-ink display library for ARM64
	# This ensures all assets are ready for packaging
	true

override_dh_auto_install:
	# Process files installed by debian/install
	dh_auto_install
	
	# Remove embedded Rust sources/build artifacts that are not needed at run-time
	rm -rf $(CURDIR)/debian/distiller-cm5-sdk/opt/distiller-cm5-sdk/src/distiller_cm5_sdk/hardware/eink/lib
	# Remove model files from src directory to avoid duplication (they're in models/ directory)
	rm -rf $(CURDIR)/debian/distiller-cm5-sdk/opt/distiller-cm5-sdk/src/distiller_cm5_sdk/parakeet/models/*
	rm -rf $(CURDIR)/debian/distiller-cm5-sdk/opt/distiller-cm5-sdk/src/distiller_cm5_sdk/piper/models/*
	rm -rf $(CURDIR)/debian/distiller-cm5-sdk/opt/distiller-cm5-sdk/src/distiller_cm5_sdk/piper/piper/*
	rm -rf $(CURDIR)/debian/distiller-cm5-sdk/opt/distiller-cm5-sdk/src/distiller_cm5_sdk/whisper/models/*
	
	# Create a symlink to the shared library in system lib for compatibility
	ln -sf /opt/distiller-cm5-sdk/lib/libdistiller_display_sdk_shared.so \
		$(CURDIR)/debian/distiller-cm5-sdk/usr/lib/libdistiller_display_sdk_shared.so
	
	# Copy requirements.txt as backup (for compatibility) if it exists
	if [ -f requirements.txt ]; then \
		cp requirements.txt $(CURDIR)/debian/distiller-cm5-sdk/opt/distiller-cm5-sdk/; \
	fi

override_dh_python3:
	# Skip dh_python3 since we're using uv for Python environment management
	true

override_dh_strip:
	# Skip stripping for cross-compiled binaries
	true

override_dh_shlibdeps:
	# Skip shlibdeps for cross-compiled binaries
	true
